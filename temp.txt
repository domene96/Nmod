QUADRUPLES
0
[ 19, None, None, 85 ]
[ goto, None, None, 85 ]
1
[ 20, None, None, 10000 ]
[ print, None, None, example5 ]
2
[ 28, 1000, None, 23332 ]
[ r_return, example1, None, 23332 ]
3
[ 27, None, None, None ]
[ endproc, None, None, None ]
4
[ 5, 30015, None, 10000 ]
[ =, 10, None, example10 ]
5
[ 5, 36666, None, 23332 ]
[ =, 'c', None, example11 ]
6
[ 20, None, None, 36667 ]
[ print, None, None, "Hello World!" ]
7
[ 20, None, None, 36668 ]
[ print, None, None, "5" ]
8
[ 20, None, None, 10000 ]
[ print, None, None, example10 ]
9
[ 20, None, None, 23332 ]
[ print, None, None, example11 ]
10
[ 20, None, None, 36666 ]
[ print, None, None, 'c' ]
11
[ 20, None, None, 30015 ]
[ print, None, None, 10 ]
12
[ 20, None, None, 33333 ]
[ print, None, None, 10.5 ]
13
[ 27, None, None, None ]
[ endproc, None, None, None ]
14
[ 5, 30002, None, 10001 ]
[ =, 0, None, num1 ]
15
[ 5, 30005, None, 10002 ]
[ =, 1, None, num2 ]
16
[ 5, 30009, None, 10003 ]
[ =, 2, None, count ]
17
[ 13, 30002, 10000, 10000 ]
[ <=, 0, x, 10000 ]
18
[ 17, 10000, None, 21 ]
[ gotoF, 10000, None, 21 ]
19
[ 20, None, None, 36669 ]
[ print, None, None, "Plese enter a positive integer" ]
20
[ 19, None, None, 39 ]
[ goto, None, None, 39 ]
21
[ 14, 30005, 10000, 10001 ]
[ equal, 1, x, 10001 ]
22
[ 17, 10001, None, 26 ]
[ gotoF, 10001, None, 26 ]
23
[ 20, None, None, 36670 ]
[ print, None, None, "Fibonacci sequence:" ]
24
[ 20, None, None, 10001 ]
[ print, None, None, num1 ]
25
[ 19, None, None, 39 ]
[ goto, None, None, 39 ]
26
[ 20, None, None, 36670 ]
[ print, None, None, "Fibonacci sequence:" ]
27
[ 20, None, None, 10001 ]
[ print, None, None, num1 ]
28
[ 20, None, None, 10002 ]
[ print, None, None, num2 ]
29
[ 11, 10000, 10003, 10002 ]
[ <, x, count, 10002 ]
30
[ 17, 10002, None, 39 ]
[ gotoF, 10002, None, 39 ]
31
[ 6, 10002, 10001, 10003 ]
[ +, num2, num1, 10003 ]
32
[ 5, 10003, None, 10004 ]
[ =, 10003, None, sum ]
33
[ 20, None, None, 10004 ]
[ print, None, None, sum ]
34
[ 5, 10002, None, 10001 ]
[ =, num2, None, num1 ]
35
[ 5, 10004, None, 10002 ]
[ =, sum, None, num2 ]
36
[ 6, 30005, 10003, 10004 ]
[ +, 1, count, 10004 ]
37
[ 5, 10004, None, 10003 ]
[ =, 10004, None, count ]
38
[ 19, None, None, 29 ]
[ goto, None, None, 29 ]
39
[ 28, 10004, None, 10005 ]
[ r_return, sum, None, 10005 ]
40
[ 27, None, None, None ]
[ endproc, None, None, None ]
41
[ 5, 30005, None, 10001 ]
[ =, 1, None, res ]
42
[ 10, 30005, 10000, 10000 ]
[ >, 1, x, 10000 ]
43
[ 17, 10000, None, 49 ]
[ gotoF, 10000, None, 49 ]
44
[ 8, 10000, 10001, 10001 ]
[ *, x, res, 10001 ]
45
[ 5, 10001, None, 10001 ]
[ =, 10001, None, res ]
46
[ 7, 30005, 10000, 10002 ]
[ -, 1, x, 10002 ]
47
[ 5, 10002, None, 10000 ]
[ =, 10002, None, x ]
48
[ 19, None, None, 42 ]
[ goto, None, None, 42 ]
49
[ 28, 10001, None, 10003 ]
[ r_return, res, None, 10003 ]
50
[ 27, None, None, None ]
[ endproc, None, None, None ]
51
[ 5, 36671, None, 23332 ]
[ =, 'f', None, abc ]
52
[ 20, None, None, 23332 ]
[ print, None, None, abc ]
53
[ 5, 30005, None, 16666 ]
[ =, 1, None, a ]
54
[ 20, None, None, 16666 ]
[ print, None, None, a ]
55
[ 5, 33334, None, 16667 ]
[ =, 1.1, None, b ]
56
[ 20, None, None, 16667 ]
[ print, None, None, b ]
57
[ 7, 16667, 16666, 16666 ]
[ -, b, a, 16666 ]
58
[ 5, 16666, None, 16668 ]
[ =, 16666, None, c ]
59
[ 20, None, None, 16668 ]
[ print, None, None, c ]
60
[ 9, 16667, 16666, 16667 ]
[ /, b, a, 16667 ]
61
[ 5, 16667, None, 10000 ]
[ =, 16667, None, d ]
62
[ 20, None, None, 10000 ]
[ print, None, None, d ]
63
[ 8, 33335, 16666, 16668 ]
[ *, 1.2, a, 16668 ]
64
[ 5, 16668, None, 16666 ]
[ =, 16668, None, a ]
65
[ 20, None, None, 16666 ]
[ print, None, None, a ]
66
[ 8, 16667, 10000, 16669 ]
[ *, b, d, 16669 ]
67
[ 8, 16668, 16669, 16670 ]
[ *, c, 16669, 16670 ]
68
[ 8, 33335, 16670, 16671 ]
[ *, 1.2, 16670, 16671 ]
69
[ 5, 16671, None, 16666 ]
[ =, 16671, None, a ]
70
[ 20, None, None, 16666 ]
[ print, None, None, a ]
71
[ 5, 30009, None, 4000 ]
[ =, 2, None, example7 ]
72
[ 8, 30005, 4000, 16672 ]
[ *, 1, example7, 16672 ]
73
[ 6, 16672, 16666, 16673 ]
[ +, 16672, a, 16673 ]
74
[ 5, 16673, None, 16666 ]
[ =, 16673, None, a ]
75
[ 20, None, None, 16666 ]
[ print, None, None, a ]
76
[ 8, 30002, 4000, 16674 ]
[ *, 0, example7, 16674 ]
77
[ 6, 16674, 10000, 16675 ]
[ +, 16674, d, 16675 ]
78
[ 5, 16675, None, 16666 ]
[ =, 16675, None, a ]
79
[ 20, None, None, 16666 ]
[ print, None, None, a ]
80
[ 8, 4000, 10000, 16676 ]
[ *, example7, d, 16676 ]
81
[ 8, 30002, 16676, 16677 ]
[ *, 0, 16676, 16677 ]
82
[ 5, 16677, None, 16667 ]
[ =, 16677, None, b ]
83
[ 20, None, None, 16667 ]
[ print, None, None, b ]
84
[ 27, None, None, None ]
[ endproc, None, None, None ]
85
[ 20, None, None, 36672 ]
[ print, None, None, "Tell me something: " ]
86
[ 21, None, None, 36673 ]
[ read, None, None, "Error.py" ]
87
[ 21, None, None, 36674 ]
[ read, None, None, "string" ]
88
[ 21, None, None, 36675 ]
[ read, None, None, "file.txt" ]
89
[ 5, 30016, None, 1000 ]
[ =, 92, None, example1 ]
90
[ 23, 30002, 30009, 30009 ]
[ revise, 0, 2, 30009 ]
91
[ 8, 30009, 33336, 16666 ]
[ *, 30009, 33336, 16666 ]
92
[ 6, 16666, 33336, 16667 ]
[ +, 16666, 33336, 16667 ]
93
[ 6, 16667, (4033), ¿16668 ]
[ +, 16667, (4033), ¿16668 ]
94
[ 20, None, None, ¿16668 ]
[ print, None, None, ¿16668 ]
95
[ 23, 30002, 30009, 30009 ]
[ revise, 0, 2, 30009 ]
96
[ 8, 30009, 33336, 16669 ]
[ *, 30009, 33336, 16669 ]
97
[ 23, 30000, 30001, 30014 ]
[ revise, -3, 8, 30014 ]
98
[ 8, 30014, 33337, 16670 ]
[ *, 30014, 33337, 16670 ]
99
[ 6, 16669, 16670, 16671 ]
[ +, 16669, 16670, 16671 ]
100
[ 23, 30005, 30006, 30005 ]
[ revise, 1, 4, 30005 ]
101
[ 6, 16671, 30005, 16672 ]
[ +, 16671, 1, 16672 ]
102
[ 6, 16672, 33338, 16673 ]
[ +, 16672, 33338, 16673 ]
103
[ 6, 16673, (4033), ¿16674 ]
[ +, 16673, (4033), ¿16674 ]
104
[ 20, None, None, ¿16674 ]
[ print, None, None, ¿16674 ]
105
[ 24, None, None, nothing ]
[ era, None, None, nothing ]
106
[ 6, 33339, 30005, 16675 ]
[ +, 0.5, 1, 16675 ]
107
[ 25, 16675, None, par0 ]
[ param, 16675, None, par0 ]
108
[ 25, 36676, None, par1 ]
[ param, 'a', None, par1 ]
109
[ 25, 33340, None, par2 ]
[ param, 5.6, None, par2 ]
110
[ 25, 33341, None, par3 ]
[ param, 9.9, None, par3 ]
111
[ 26, nothing, None, 51 ]
[ gosub, nothing, None, 51 ]
112
[ 23, 30002, 30003, 1000 ]
[ revise, 0, 99, 1000 ]
113
[ 6, 1000, 33342, 16676 ]
[ +, 1000, 33342, 16676 ]
114
[ 6, 16676, (7001), ¿16677 ]
[ +, 16676, (7001), ¿16677 ]
115
[ 20, None, None, ¿16677 ]
[ print, None, None, ¿16677 ]
116
[ 6, 30014, 30008, 10000 ]
[ +, 3, 5, 10000 ]
117
[ 23, 30002, 30003, 10000 ]
[ revise, 0, 99, 10000 ]
118
[ 6, 10000, 33342, 16678 ]
[ +, 10000, 33342, 16678 ]
119
[ 6, 16678, (7001), ¿16679 ]
[ +, 16678, (7001), ¿16679 ]
120
[ 20, None, None, ¿16679 ]
[ print, None, None, ¿16679 ]
121
[ 23, 30002, 30009, 30009 ]
[ revise, 0, 2, 30009 ]
122
[ 8, 30009, 33336, 16680 ]
[ *, 30009, 33336, 16680 ]
123
[ 8, 30002, 30009, 10001 ]
[ *, 0, 2, 10001 ]
124
[ 23, 30000, 30001, 10001 ]
[ revise, -3, 8, 10001 ]
125
[ 8, 10001, 33337, 16681 ]
[ *, 10001, 33337, 16681 ]
126
[ 6, 16680, 16681, 16682 ]
[ +, 16680, 16681, 16682 ]
127
[ 23, 30005, 30006, 30014 ]
[ revise, 1, 4, 30014 ]
128
[ 6, 16682, 30014, 16683 ]
[ +, 16682, 3, 16683 ]
129
[ 6, 16683, 33338, 16684 ]
[ +, 16683, 33338, 16684 ]
130
[ 6, 16684, (4033), ¿16685 ]
[ +, 16684, (4033), ¿16685 ]
131
[ 20, None, None, ¿16685 ]
[ print, None, None, ¿16685 ]
132
[ 23, 30002, 30003, 30002 ]
[ revise, 0, 99, 30002 ]
133
[ 6, 30002, 33342, 16686 ]
[ +, 30002, 33342, 16686 ]
134
[ 6, 16686, (7001), ¿16687 ]
[ +, 16686, (7001), ¿16687 ]
135
[ 5, 30002, None, ¿16687 ]
[ =, 0, None, ¿16687 ]
136
[ 23, 30002, 30003, 30005 ]
[ revise, 0, 99, 30005 ]
137
[ 6, 30005, 33342, 16688 ]
[ +, 30005, 33342, 16688 ]
138
[ 6, 16688, (7001), ¿16689 ]
[ +, 16688, (7001), ¿16689 ]
139
[ 5, 30005, None, ¿16689 ]
[ =, 1, None, ¿16689 ]
140
[ 23, 30002, 30003, 30009 ]
[ revise, 0, 99, 30009 ]
141
[ 6, 30009, 33342, 16690 ]
[ +, 30009, 33342, 16690 ]
142
[ 6, 16690, (7001), ¿16691 ]
[ +, 16690, (7001), ¿16691 ]
143
[ 5, 30009, None, ¿16691 ]
[ =, 2, None, ¿16691 ]
144
[ 23, 30002, 30003, 30014 ]
[ revise, 0, 99, 30014 ]
145
[ 6, 30014, 33342, 16692 ]
[ +, 30014, 33342, 16692 ]
146
[ 6, 16692, (7001), ¿16693 ]
[ +, 16692, (7001), ¿16693 ]
147
[ 5, 30014, None, ¿16693 ]
[ =, 3, None, ¿16693 ]
148
[ 23, 30002, 30003, 30006 ]
[ revise, 0, 99, 30006 ]
149
[ 6, 30006, 33342, 16694 ]
[ +, 30006, 33342, 16694 ]
150
[ 6, 16694, (7001), ¿16695 ]
[ +, 16694, (7001), ¿16695 ]
151
[ 5, 30006, None, ¿16695 ]
[ =, 4, None, ¿16695 ]
152
[ 23, 30002, 30003, 30014 ]
[ revise, 0, 99, 30014 ]
153
[ 6, 30014, 33342, 16696 ]
[ +, 30014, 33342, 16696 ]
154
[ 6, 16696, (7001), ¿16697 ]
[ +, 16696, (7001), ¿16697 ]
155
[ 20, None, None, ¿16697 ]
[ print, None, None, ¿16697 ]
156
[ 23, 30000, 30001, 30005 ]
[ revise, -3, 8, 30005 ]
157
[ 6, 30005, 33343, 16698 ]
[ +, 30005, 33343, 16698 ]
158
[ 6, 16698, (1003), ¿16699 ]
[ +, 16698, (1003), ¿16699 ]
159
[ 5, 30005, None, ¿16699 ]
[ =, 1, None, ¿16699 ]
160
[ 23, 30000, 30001, 30005 ]
[ revise, -3, 8, 30005 ]
161
[ 6, 30005, 33343, 16700 ]
[ +, 30005, 33343, 16700 ]
162
[ 6, 16700, (1003), ¿16701 ]
[ +, 16700, (1003), ¿16701 ]
163
[ 10, 30002, 16701, 10002 ]
[ >, 0, 16701, 10002 ]
164
[ 17, 10002, None, 230 ]
[ gotoF, 10002, None, 230 ]
165
[ 20, None, None, 36672 ]
[ print, None, None, "Tell me something: " ]
166
[ 20, None, None, 1002 ]
[ print, None, None, _example3 ]
167
[ 21, None, None, 36674 ]
[ read, None, None, "string" ]
168
[ 21, None, None, 30015 ]
[ read, None, None, 10 ]
169
[ 29, None, None, None ]
[ rnom, None, None, None ]
170
[ 23, 30002, 30003, 30008 ]
[ revise, 0, 99, 30008 ]
171
[ 6, 30008, 33342, 16702 ]
[ +, 30008, 33342, 16702 ]
172
[ 6, 16702, (7001), ¿16703 ]
[ +, 16702, (7001), ¿16703 ]
173
[ 25, ¿16703, None, par0 ]
[ param, ¿16703, None, par0 ]
174
[ 8, 30009, 30017, 10003 ]
[ *, 2, 77, 10003 ]
175
[ 25, 10003, None, par1 ]
[ param, 10003, None, par1 ]
176
[ 25, 1002, None, par2 ]
[ param, 1002, None, par2 ]
177
[ 26, rnom, None, 51 ]
[ gosub, rnom, None, 51 ]
178
[ 30, None, None, None ]
[ rexp, None, None, None ]
179
[ 25, 4000, None, par0 ]
[ param, 4000, None, par0 ]
180
[ 25, 4000, None, par1 ]
[ param, 4000, None, par1 ]
181
[ 26, rexp, None, 51 ]
[ gosub, rexp, None, 51 ]
182
[ 31, None, None, None ]
[ rgamma, None, None, None ]
183
[ 25, 4000, None, par0 ]
[ param, 4000, None, par0 ]
184
[ 25, 4000, None, par1 ]
[ param, 4000, None, par1 ]
185
[ 25, 4000, None, par2 ]
[ param, 4000, None, par2 ]
186
[ 25, 4000, None, par3 ]
[ param, 4000, None, par3 ]
187
[ 25, 4000, None, par4 ]
[ param, 4000, None, par4 ]
188
[ 25, 4000, None, par5 ]
[ param, 4000, None, par5 ]
189
[ 26, rgamma, None, 51 ]
[ gosub, rgamma, None, 51 ]
190
[ 24, None, None, cyclicFib ]
[ era, None, None, cyclicFib ]
191
[ 25, 30018, None, par0 ]
[ param, 18, None, par0 ]
192
[ 26, cyclicFib, None, 14 ]
[ gosub, cyclicFib, None, 14 ]
193
[ 20, None, None, 36667 ]
[ print, None, None, "Hello World!" ]
194
[ 10, 30010, 1000, 10004 ]
[ >, 1000, example1, 10004 ]
195
[ 17, 10004, None, 221 ]
[ gotoF, 10004, None, 221 ]
196
[ 5, 30008, None, 1002 ]
[ =, 5, None, _example3 ]
197
[ 15, 30005, 30005, 10005 ]
[ and, 1, 1, 10005 ]
198
[ 17, 10005, None, 220 ]
[ gotoF, 10005, None, 220 ]
199
[ 16, 30005, 30005, 10006 ]
[ or, 1, 1, 10006 ]
200
[ 17, 10006, None, 211 ]
[ gotoF, 10006, None, 211 ]
201
[ 14, 30005, 30005, 10007 ]
[ equal, 1, 1, 10007 ]
202
[ 17, 10007, None, 208 ]
[ gotoF, 10007, None, 208 ]
203
[ 12, 30005, 30005, 10008 ]
[ >=, 1, 1, 10008 ]
204
[ 17, 10008, None, 207 ]
[ gotoF, 10008, None, 207 ]
205
[ 9, 33345, 33344, 16704 ]
[ /, 2.5, 8.0, 16704 ]
206
[ 5, 16704, None, 4000 ]
[ =, 16704, None, example7 ]
207
[ 19, None, None, 211 ]
[ goto, None, None, 211 ]
208
[ 5, 30019, None, 1002 ]
[ =, 7, None, _example3 ]
209
[ 20, None, None, 1002 ]
[ print, None, None, _example3 ]
210
[ 20, None, None, 1002 ]
[ print, None, None, _example3 ]
211
[ 12, 30002, 1002, 10009 ]
[ >=, 0, _example3, 10009 ]
212
[ 17, 10009, None, 220 ]
[ gotoF, 10009, None, 220 ]
213
[ 23, 30002, 30010, 30004 ]
[ revise, 0, 1000, 30004 ]
214
[ 6, 30004, 33342, 16705 ]
[ +, 30004, 33342, 16705 ]
215
[ 6, 16705, (4177), ¿16706 ]
[ +, 16705, (4177), ¿16706 ]
216
[ 5, 1000, None, ¿16706 ]
[ =, example1, None, ¿16706 ]
217
[ 7, 30005, 1002, 10010 ]
[ -, 1, _example3, 10010 ]
218
[ 5, 10010, None, 1002 ]
[ =, 10010, None, _example3 ]
219
[ 19, None, None, 211 ]
[ goto, None, None, 211 ]
220
[ 28, 1002, None, 10011 ]
[ r_return, _example3, None, 10011 ]
221
[ 23, 30000, 30001, 30005 ]
[ revise, -3, 8, 30005 ]
222
[ 6, 30005, 33343, 16707 ]
[ +, 30005, 33343, 16707 ]
223
[ 6, 16707, (1003), ¿16708 ]
[ +, 16707, (1003), ¿16708 ]
224
[ 23, 30000, 30001, 30005 ]
[ revise, -3, 8, 30005 ]
225
[ 6, 30005, 33343, 16709 ]
[ +, 30005, 33343, 16709 ]
226
[ 6, 16709, (1003), ¿16710 ]
[ +, 16709, (1003), ¿16710 ]
227
[ 7, 30005, 16710, 10012 ]
[ -, 1, 16710, 10012 ]
228
[ 5, 10012, None, ¿16708 ]
[ =, 10012, None, ¿16708 ]
229
[ 19, None, None, 160 ]
[ goto, None, None, 160 ]
230
[ 28, 1000, None, 10013 ]
[ r_return, example1, None, 10013 ]
-------------
Function Directory
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ººººººººººººººººººººººººººººº
Function Name:  global
Type:  void
Variable Table
-----------------------------
example1 => ['int', 1000, None, 1, None]
Example2 => ['int', 1001, None, 1, None]
_example3 => ['int', 1002, None, 1, None]
example4 => ['int', 1003, None, 12, <Structures.DimensionNode object at 0x107638050>]
[ -3, 8, 3.0, None ]
123abcValid => ['int', 1015, None, 1, None]
example5 => ['char', 7000, None, 1, None]
example6 => ['char', 7001, None, 100, <Structures.DimensionNode object at 0x1076389d0>]
[ 0, 99, 0.0, None ]
ghi => ['char', 7101, None, 73, <Structures.DimensionNode object at 0x107638d50>]
[ 8, 80, -8.0, None ]
example7 => ['float', 4000, None, 1, None]
mat => ['float', 4001, None, 32, <Structures.DimensionNode object at 0x10763c390>]
[ 1, 4, 8.0, <Structures.DimensionNode object at 0x10746c650> ]
[ -2, 5, -6.0, None ]
cube => ['float', 4033, None, 144, <Structures.DimensionNode object at 0x10763c950>]
[ 0, 2, 48.0, <Structures.DimensionNode object at 0x10763cad0> ]
[ -3, 8, 4.0, <Structures.DimensionNode object at 0x10763cc10> ]
[ 1, 4, 11.0, None ]
arrX => ['float', 4177, None, 1001, <Structures.DimensionNode object at 0x10763cfd0>]
[ 0, 1000, 0.0, None ]
arrY => ['float', 5178, None, 1001, <Structures.DimensionNode object at 0x107641390>]
[ 0, 1000, 0.0, None ]
arrTexts => ['float', 6179, None, 6, <Structures.DimensionNode object at 0x107641690>]
[ -10, -5, 10.0, None ]
arrProbs => ['float', 6185, None, 101, <Structures.DimensionNode object at 0x107641a10>]
[ 0, 100, 0.0, None ]
arrQuantiles => ['float', 6286, None, 4, <Structures.DimensionNode object at 0x107641d50>]
[ 0, 3, 0.0, None ]
testFunction => ['char', 7174, None, 1, None]
cyclicFib => ['int', 1016, None, 1, None]
cyclicFactorial => ['int', 1017, None, 1, None]
nothing => ['float', 6290, None, 1, None]
-----------------------------
Parameters:  []
Quad place:  85
Memory Address:  None
Stack Size:  None
ººººººººººººººººººººººººººººº
ººººººººººººººººººººººººººººº
Function Name:  testFunction
Type:  char
Variable Table
-----------------------------
example5 => ['int', 10000, None, 1, None]
-----------------------------
Parameters:  ['int']
Quad place:  1
Memory Address:  None
Stack Size:  None
ººººººººººººººººººººººººººººº
ººººººººººººººººººººººººººººº
Function Name:  helloWorld
Type:  void
Variable Table
-----------------------------
example10 => ['int', 10000, None, 1, None]
example11 => ['char', 23332, None, 1, None]
-----------------------------
Parameters:  []
Quad place:  4
Memory Address:  None
Stack Size:  None
ººººººººººººººººººººººººººººº
ººººººººººººººººººººººººººººº
Function Name:  cyclicFib
Type:  int
Variable Table
-----------------------------
x => ['int', 10000, None, 1, None]
num1 => ['int', 10001, None, 1, None]
num2 => ['int', 10002, None, 1, None]
count => ['int', 10003, None, 1, None]
sum => ['int', 10004, None, 1, None]
-----------------------------
Parameters:  ['int']
Quad place:  14
Memory Address:  None
Stack Size:  None
ººººººººººººººººººººººººººººº
ººººººººººººººººººººººººººººº
Function Name:  cyclicFactorial
Type:  int
Variable Table
-----------------------------
x => ['int', 10000, None, 1, None]
res => ['int', 10001, None, 1, None]
-----------------------------
Parameters:  ['int']
Quad place:  41
Memory Address:  None
Stack Size:  None
ººººººººººººººººººººººººººººº
ººººººººººººººººººººººººººººº
Function Name:  nothing
Type:  float
Variable Table
-----------------------------
a => ['float', 16666, None, 1, None]
abc => ['char', 23332, None, 1, None]
b => ['float', 16667, None, 1, None]
c => ['float', 16668, None, 1, None]
d => ['int', 10000, None, 1, None]
iiiii => ['float', 16669, None, 101, <Structures.DimensionNode object at 0x1076b0d10>]
[ 0, 100, 0.0, None ]
-----------------------------
Parameters:  ['float', 'char', 'float', 'float']
Quad place:  51
Memory Address:  None
Stack Size:  None
ººººººººººººººººººººººººººººº
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Constant Memory
-----------------------------
Int:
30000 -3
30001 8
30002 0
30003 99
30004 80
30005 1
30006 4
30007 -2
30008 5
30009 2
30010 1000
30011 -10
30012 -5
30013 100
30014 3
30015 10
30016 92
30017 77
30018 18
30019 7
Float:
33333 10.5
33334 1.1
33335 1.2
33336 48.0
33337 4.0
33338 11.0
33339 0.5
33340 5.6
33341 9.9
33342 0.0
33343 3.0
33344 8.0
33345 2.5
Char:
36666 'c'
36667 "Hello World!"
36668 "5"
36669 "Plese enter a positive integer"
36670 "Fibonacci sequence:"
36671 'f'
36672 "Tell me something: "
36673 "Error.py"
36674 "string"
36675 "file.txt"
36676 'a'
-----------------------------
0
[ 19, None, None, 85 ]
moved to  84
85
[ 20, None, None, 36672 ]
printing  "Tell me something: "
86
[ 21, None, None, 36673 ]
#RUNTIME ERROR FileManipulation: file "Error.py" does not exist
87
[ 21, None, None, 36674 ]
#RUNTIME ERROR FileManipulation: file "string" does not exist
88
[ 21, None, None, 36675 ]
#RUNTIME ERROR FileManipulation: file "file.txt" does not exist
89
[ 5, 30016, None, 1000 ]
1000  =  92
90
[ 23, 30002, 30009, 30009 ]
revise  0 2 2 True
91
[ 8, 30009, 33336, 16666 ]
8 2 48.0 16666
16666  =  96.0
92
[ 6, 16666, 33336, 16667 ]
6 96.0 48.0 16667
16667  =  144.0
93
[ 6, 16667, (4033), ¿16668 ]
6 144.0 4033 16668
16668  =  4177.0
94
[ 20, None, None, ¿16668 ]
printing  None
95
[ 23, 30002, 30009, 30009 ]
revise  0 2 2 True
96
[ 8, 30009, 33336, 16669 ]
8 2 48.0 16669
16669  =  96.0
97
[ 23, 30000, 30001, 30014 ]
revise  -3 8 3 True
98
[ 8, 30014, 33337, 16670 ]
8 3 4.0 16670
16670  =  12.0
99
[ 6, 16669, 16670, 16671 ]
6 96.0 12.0 16671
16671  =  108.0
100
[ 23, 30005, 30006, 30005 ]
revise  1 4 1 True
101
[ 6, 16671, 30005, 16672 ]
6 108.0 1 16672
16672  =  109.0
102
[ 6, 16672, 33338, 16673 ]
6 109.0 11.0 16673
16673  =  120.0
103
[ 6, 16673, (4033), ¿16674 ]
6 120.0 4033 16674
16674  =  4153.0
104
[ 20, None, None, ¿16674 ]
printing  None
105
[ 24, None, None, nothing ]
ERA for  nothing  created
106
[ 6, 33339, 30005, 16675 ]
6 0.5 1 16675
16675  =  1.5
107
[ 25, 16675, None, par0 ]
param 0 16675 1.5
108
[ 25, 36676, None, par1 ]
param 1 36676 'a'
109
[ 25, 33340, None, par2 ]
param 2 33340 5.6
110
[ 25, 33341, None, par3 ]
param 3 33341 9.9
111
[ 26, nothing, None, 51 ]
moved to  51
51
[ 5, 36671, None, 23332 ]
23332  =  'f'
52
[ 20, None, None, 23332 ]
printing  'f'
53
[ 5, 30005, None, 16666 ]
16666  =  1
54
[ 20, None, None, 16666 ]
printing  1
55
[ 5, 33334, None, 16667 ]
16667  =  1.1
56
[ 20, None, None, 16667 ]
printing  1.1
57
[ 7, 16667, 16666, 16666 ]
7 1.1 1 16666
16666  =  0.10000000000000009
58
[ 5, 16666, None, 16668 ]
16668  =  0.10000000000000009
59
[ 20, None, None, 16668 ]
printing  0.10000000000000009
60
[ 9, 16667, 16666, 16667 ]
9 1.1 0.10000000000000009 16667
16667  =  10.999999999999991
61
[ 5, 16667, None, 10000 ]
10000  =  10.999999999999991
62
[ 20, None, None, 10000 ]
printing  10.999999999999991
63
[ 8, 33335, 16666, 16668 ]
8 1.2 0.10000000000000009 16668
16668  =  0.1200000000000001
64
[ 5, 16668, None, 16666 ]
16666  =  0.1200000000000001
65
[ 20, None, None, 16666 ]
printing  0.1200000000000001
66
[ 8, 16667, 10000, 16669 ]
8 10.999999999999991 10.999999999999991 16669
16669  =  120.9999999999998
67
[ 8, 16668, 16669, 16670 ]
8 0.1200000000000001 120.9999999999998 16670
16670  =  14.519999999999989
68
[ 8, 33335, 16670, 16671 ]
8 1.2 14.519999999999989 16671
16671  =  17.423999999999985
69
[ 5, 16671, None, 16666 ]
16666  =  17.423999999999985
70
[ 20, None, None, 16666 ]
printing  17.423999999999985
71
[ 5, 30009, None, 4000 ]
4000  =  2
72
[ 8, 30005, 4000, 16672 ]
8 1 2 16672
16672  =  2.0
73
[ 6, 16672, 16666, 16673 ]
6 2.0 17.423999999999985 16673
16673  =  19.423999999999985
74
[ 5, 16673, None, 16666 ]
16666  =  19.423999999999985
75
[ 20, None, None, 16666 ]
printing  19.423999999999985
76
[ 8, 30002, 4000, 16674 ]
8 0 2 16674
16674  =  0.0
77
[ 6, 16674, 10000, 16675 ]
6 0.0 10.999999999999991 16675
16675  =  10.999999999999991
78
[ 5, 16675, None, 16666 ]
16666  =  10.999999999999991
79
[ 20, None, None, 16666 ]
printing  10.999999999999991
80
[ 8, 4000, 10000, 16676 ]
8 2 10.999999999999991 16676
16676  =  21.999999999999982
81
[ 8, 30002, 16676, 16677 ]
8 0 21.999999999999982 16677
16677  =  0.0
82
[ 5, 16677, None, 16667 ]
16667  =  0.0
83
[ 20, None, None, 16667 ]
printing  0.0
84
[ 27, None, None, None ]
moved to  111
112
[ 23, 30002, 30003, 1000 ]
revise  0 99 92 True
113
[ 6, 1000, 33342, 16676 ]
6 92 0.0 16676
16676  =  92.0
114
[ 6, 16676, (7001), ¿16677 ]
6 92.0 7001 16677
16677  =  7093.0
115
[ 20, None, None, ¿16677 ]
printing  None
116
[ 6, 30014, 30008, 10000 ]
6 3 5 10000
10000  =  8.0
117
[ 23, 30002, 30003, 10000 ]
revise  0 99 8 True
118
[ 6, 10000, 33342, 16678 ]
6 8.0 0.0 16678
16678  =  8.0
119
[ 6, 16678, (7001), ¿16679 ]
6 8.0 7001 16679
16679  =  7009.0
120
[ 20, None, None, ¿16679 ]
printing  None
121
[ 23, 30002, 30009, 30009 ]
revise  0 2 2 True
122
[ 8, 30009, 33336, 16680 ]
8 2 48.0 16680
16680  =  96.0
123
[ 8, 30002, 30009, 10001 ]
8 0 2 10001
10001  =  0.0
124
[ 23, 30000, 30001, 10001 ]
revise  -3 8 0 True
125
[ 8, 10001, 33337, 16681 ]
8 0.0 4.0 16681
16681  =  0.0
126
[ 6, 16680, 16681, 16682 ]
6 96.0 0.0 16682
16682  =  96.0
127
[ 23, 30005, 30006, 30014 ]
revise  1 4 3 True
128
[ 6, 16682, 30014, 16683 ]
6 96.0 3 16683
16683  =  99.0
129
[ 6, 16683, 33338, 16684 ]
6 99.0 11.0 16684
16684  =  110.0
130
[ 6, 16684, (4033), ¿16685 ]
6 110.0 4033 16685
16685  =  4143.0
131
[ 20, None, None, ¿16685 ]
printing  None
132
[ 23, 30002, 30003, 30002 ]
revise  0 99 0 True
133
[ 6, 30002, 33342, 16686 ]
6 0 0.0 16686
16686  =  0.0
134
[ 6, 16686, (7001), ¿16687 ]
6 0.0 7001 16687
16687  =  7001.0
135
[ 5, 30002, None, ¿16687 ]
7001  =  0
136
[ 23, 30002, 30003, 30005 ]
revise  0 99 1 True
137
[ 6, 30005, 33342, 16688 ]
6 1 0.0 16688
16688  =  1.0
138
[ 6, 16688, (7001), ¿16689 ]
6 1.0 7001 16689
16689  =  7002.0
139
[ 5, 30005, None, ¿16689 ]
7002  =  1
140
[ 23, 30002, 30003, 30009 ]
revise  0 99 2 True
141
[ 6, 30009, 33342, 16690 ]
6 2 0.0 16690
16690  =  2.0
142
[ 6, 16690, (7001), ¿16691 ]
6 2.0 7001 16691
16691  =  7003.0
143
[ 5, 30009, None, ¿16691 ]
7003  =  2
144
[ 23, 30002, 30003, 30014 ]
revise  0 99 3 True
145
[ 6, 30014, 33342, 16692 ]
6 3 0.0 16692
16692  =  3.0
146
[ 6, 16692, (7001), ¿16693 ]
6 3.0 7001 16693
16693  =  7004.0
147
[ 5, 30014, None, ¿16693 ]
7004  =  3
148
[ 23, 30002, 30003, 30006 ]
revise  0 99 4 True
149
[ 6, 30006, 33342, 16694 ]
6 4 0.0 16694
16694  =  4.0
150
[ 6, 16694, (7001), ¿16695 ]
6 4.0 7001 16695
16695  =  7005.0
151
[ 5, 30006, None, ¿16695 ]
7005  =  4
152
[ 23, 30002, 30003, 30014 ]
revise  0 99 3 True
153
[ 6, 30014, 33342, 16696 ]
6 3 0.0 16696
16696  =  3.0
154
[ 6, 16696, (7001), ¿16697 ]
6 3.0 7001 16697
16697  =  7004.0
155
[ 20, None, None, ¿16697 ]
printing  3
156
[ 23, 30000, 30001, 30005 ]
revise  -3 8 1 True
157
[ 6, 30005, 33343, 16698 ]
6 1 3.0 16698
16698  =  4.0
158
[ 6, 16698, (1003), ¿16699 ]
6 4.0 1003 16699
16699  =  1007.0
159
[ 5, 30005, None, ¿16699 ]
1007  =  1
160
[ 23, 30000, 30001, 30005 ]
revise  -3 8 1 True
161
[ 6, 30005, 33343, 16700 ]
6 1 3.0 16700
16700  =  4.0
162
[ 6, 16700, (1003), ¿16701 ]
6 4.0 1003 16701
16701  =  1007.0
163
[ 10, 30002, 16701, 10002 ]
10002  =  0
164
[ 17, 10002, None, 230 ]
moved to  229
230
[ 28, 1000, None, 10013 ]
return to  10013  =>  92
231
[ 22, None, None, None ]
Goodbye :)
